<?xml version="1.0" encoding="UTF-8"?>
<!-- status="TRACE" to debug logging config, default: WARN -->
<Configuration status="WARN" packages="se.skl.tp.vp.logging.plugins">
	<Properties>
		<Property name="log.dir">${sys:mule.home}/logs</Property>
	</Properties>

	<Appenders>
		<Console name="Console" target="SYSTEM_OUT">
			<PatternLayout pattern="%d %-5p [%t] %-30c - %m%n"/>
		</Console>

		<!--<SocketLoggerAppender name="SocketLoggerAppender" configResource="vp-socketappender-test.properties"></SocketLoggerAppender>-->
		<SocketLoggerAppender name="SocketLoggerAppender" host="localhost" port="${sys:SocketLoggerAppenderTest.port}"></SocketLoggerAppender>


	</Appenders>

	<!-- Log levels: {OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL}
		See: https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/Level.html -->

	<Loggers>
		<AsyncLogger name="org.mockftpserver" level="ERROR"/>
		<AsyncLogger name="org.apache.sshd" level="ERROR"/>
		<AsyncLogger name="org.apache.commons.httpclient" level="ERROR"/>
		<AsyncLogger name="org.apache.activemq.transport.failover.FailoverTransport" level="DEBUG"/>
		<AsyncLogger name="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" level="TRACE"/>
		<AsyncLogger name="org.springframework.core.io.support.PropertiesLoaderSupport" level="INFO"/>
		<AsyncLogger name="org.springframework.beans.factory.xml.XmlBeanDefinitionReader" level="INFO"/>
		<AsyncLogger name="org.mule.model.seda" level="INFO"/>
		<AsyncLogger name="org.mule.MuleServer" level="INFO"/>
		<AsyncLogger name="org.mule.DefaultMuleContext" level="INFO"/>
		<!-- Message logging using the old Mule <logger/> - element -->
		<AsyncLogger name="org.mule.api.processor.LoggerMessageProcessor" level="INFO"/>
		<!-- Message logging using the old Mule <log-component/> - element -->
		<AsyncLogger name="org.mule.component.simple.LogComponent" level="ERROR"/>
		<AsyncLogger name="org.soitoolkit.commons" level="ERROR"/>
		<AsyncLogger name="se.skltp.mule.logging.socketLogger" level="DEBUG" additivity="false">
			<AppenderRef ref="SocketLoggerAppender"></AppenderRef>
		</AsyncLogger>

		<!-- Message logging using soi-toolkit LogTransformer class -->
		<!--
			For logging events to QUEUE using EventLogger (if JMS-logging is enabled):

			Defaults to payload logging = off

			DEBUG puts logevents (with payload) and errorevents on log queue
			INFO puts logevents (without payload) and errorevents on log queue
			ERROR will only put errorevents on log queue
		-->
		<AsyncLogger name="org.soitoolkit.commons.mule.messageLogger" level="DEBUG"/>

		<AsyncLogger name="se.skl.tp.vp" level="INFO"/>
		<AsyncLogger name="se.skl.tp.hsa" level="INFO"/>

		<!-- Monitoring logs to separate log file, additivity makes sure not logged twice -->
		<AsyncLogger name="se.skl.tp.vp.monitoring" level="DEBUG" additivity="false">
			<AppenderRef ref="Console"/>
		</AsyncLogger>

		<!-- Level INFO will give log output for reset cache -->
		<AsyncLogger name="se.skl.tp.vp.vagvalagent.VagvalAgent" level="INFO"/>
		<!-- Level INFO will give log output for reset hsa cache -->
		<AsyncLogger name="se.skl.tp.vp.vagvalagent.ResetHsaCache" level="INFO"/>
		<!-- Level INFO will give log output during startup of VP, initiating VP caches etc -->
		<AsyncLogger name="se.skl.tp.vp.vagvalagent.MuleStartupNotificationHandler" level="INFO"/>
		<!-- Level INFO will give log for TakCache component -->
		<AsyncLogger name="se.skltp.takcache" level="INFO"/>
		<!-- Level INFO will give log for Behorighet and vagval handlers -->
		<AsyncLogger name="se.skl.tp.behorighet" level="INFO"/>
		<AsyncLogger name="se.skl.tp.vagval" level="INFO"/>





		<!-- Level DEBUG: Log http headers transfered during a request/response -->
		<AsyncLogger name="httpclient.wire.header" level="FATAL"/>
		<!-- Level DEBUG: Log the http content transfered during a request/response -->
		<AsyncLogger name="httpclient.wire.content" level="FATAL"/>

		
		<AsyncRoot level="WARN">
			<AppenderRef ref="Console"/>
			<!--
			<AppenderRef ref="RollingRandomAccessFile"/>
			-->
		</AsyncRoot>
	</Loggers>
</Configuration>
